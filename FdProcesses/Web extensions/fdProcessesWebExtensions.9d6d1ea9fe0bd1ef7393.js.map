{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/fdProcesses/fdCardUIExtension.ts","webpack:///./src/fdProcesses/fdCommentRequestUIExtension.ts","webpack:///./src/fdProcesses/fdProcessTemplateTileExtension.ts","webpack:///./src/fdProcesses/fdProcessTilesExtension.ts","webpack:///./src/fdProcesses/fdUIExtension.ts","webpack:///./src/fdProcesses/index.ts","webpack:///./src/fdProcesses/registrator.ts","webpack:///external \"mobx\"","webpack:///external \"tessa.tessa\"","webpack:///external \"tessa.tessa.cards\"","webpack:///external \"tessa.tessa.cards.service\"","webpack:///external \"tessa.tessa.cards.types\"","webpack:///external \"tessa.tessa.extensions\"","webpack:///external \"tessa.tessa.platform\"","webpack:///external \"tessa.tessa.ui\"","webpack:///external \"tessa.tessa.ui.cards\"","webpack:///external \"tessa.tessa.ui.cards.forms\"","webpack:///external \"tessa.tessa.ui.tiles\""],"names":[],"mappings":"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","file":"fdProcessesWebExtensions.9d6d1ea9fe0bd1ef7393.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/fdProcesses/index.ts\");\n","import { CardUIExtension, ICardUIExtensionContext } from 'tessa/ui/cards';\r\nimport { TaskViewModel } from 'tessa/ui/cards/tasks';\r\nimport { tryGetFromInfo, UIButton } from 'tessa/ui';\r\nimport { Card } from 'tessa/cards';\r\nimport { GridViewModel } from 'tessa/ui/cards/controls';\r\nimport { autorun } from 'mobx';\r\nimport { FdProcessTilesExtension } from './fdProcessTilesExtension';\r\n\r\nexport class FdCardUIExtension extends CardUIExtension {\r\n  private _disposer: Function | null = null;\r\n\r\n  public initialized(context: ICardUIExtensionContext) {\r\n    if (!context.model || !context.model.card) {\r\n      return;\r\n    }\r\n    const card = context.model.card;\r\n\r\n    // скроем кнопки заданий\r\n    this.HideTaskOptions(context, card);\r\n\r\n    // Добавим кнопку визуализации процесса\r\n    this.AddVisualizeButton(context, card);\r\n  }\r\n\r\n  public finalized() {\r\n    // подчищаем за собой\r\n    if (this._disposer) {\r\n      this._disposer();\r\n      this._disposer = null;\r\n    }\r\n  }\r\n\r\n  private AddVisualizeButton(context: ICardUIExtensionContext, card: Card) {\r\n    // пытаемся найти грид по алиасу\r\n    const table = context.model.controls.get('FdProcessesTable') as GridViewModel;\r\n    if (!table) {\r\n      return;\r\n    }\r\n\r\n    // создаем кнопку визуализации процесса\r\n    const copyButton = new UIButton(\r\n      'Визуализировать',\r\n      () => {\r\n        // получаем текущую выбранную строку\r\n        const selectedRow = table.selectedRow;\r\n        if (!selectedRow) {\r\n          return;\r\n        }\r\n        // визуализируем экземпляр процесса\r\n        FdProcessTilesExtension.VisualizeProcess(card.id, null, selectedRow.rowId);\r\n      }\r\n    );\r\n    table.leftButtons.push(copyButton);\r\n\r\n    // следим за selectedRow; когда значение меняется, то мы устанавливаем доступность кнопки\r\n    this._disposer = autorun(() => copyButton.setIsEnabled(!!table.selectedRow));\r\n  }\r\n\r\n  private HideTaskOptions(context: ICardUIExtensionContext, card: Card) {\r\n    const hiddenOptionsList = tryGetFromInfo<any[]>(card.info, 'FdHiddenTaskOptionsKey', []);\r\n    if (!hiddenOptionsList || hiddenOptionsList.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // пытаемся получить все задания\r\n    let tasks = context.model.tryGetTasks();\r\n    if (!tasks) {\r\n      return;\r\n    }\r\n\r\n    for (let task of tasks) {\r\n      // при инциализации формы\r\n      this.removeHiddenActions(hiddenOptionsList, task);\r\n      // подписываемся на изменения формы в задании\r\n      task.workspaceChanged.add(e => this.removeHiddenActions(hiddenOptionsList, e.task));\r\n    }\r\n  }\r\n\r\n  private removeHiddenActions(hiddenOptionsList: any[], task: TaskViewModel) {\r\n    const hiddenOptionIDs = hiddenOptionsList\r\n      .filter(x => x['TaskRowID'].$value === task.taskModel.card.id)\r\n      .map(x => x['OptionID'].$value);\r\n    hiddenOptionIDs.forEach(optionIdToHide => {\r\n      const actionIndexToRemove = task.taskWorkspace.actions.findIndex(x => x.completionOption !== null && x.completionOption.id === optionIdToHide);\r\n      if (actionIndexToRemove >= 0) {\r\n        task.taskWorkspace.actions.splice(actionIndexToRemove, 1);\r\n      }\r\n      else {\r\n        const additionalActionIndexToRemove = task.taskWorkspace.additionalActions.findIndex(x => x.completionOption !== null && x.completionOption.id === optionIdToHide);\r\n        if (additionalActionIndexToRemove >= 0) {\r\n          task.taskWorkspace.additionalActions.splice(additionalActionIndexToRemove, 1);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}","import { CardUIExtension, ICardUIExtensionContext } from 'tessa/ui/cards';\r\nimport { hasNotFlag, Visibility } from 'tessa/platform';\r\nimport { CardTypeFlags } from 'tessa/cards/types';\r\nimport { DefaultFormTabWithTasksViewModel } from 'tessa/ui/cards/forms';\r\nimport { CardTaskFlags } from 'tessa/cards';\r\n\r\nexport class FdCommentRequestUIExtension extends CardUIExtension {\r\n\r\n  public initialized(context: ICardUIExtensionContext) {\r\n    const cardType = context.model.cardType;\r\n    if (hasNotFlag(cardType.flags, CardTypeFlags.AllowTasks)) {\r\n      return;\r\n    }\r\n\r\n    const model = context.model;\r\n    if (!(model.mainForm instanceof DefaultFormTabWithTasksViewModel)) {\r\n      return;\r\n    }\r\n\r\n    for (let task of model.mainForm.tasks) {\r\n      const taskModel = task.taskModel;\r\n      if (taskModel.cardType.id === '98407b52-957e-425c-8809-e7a6c358f127' // FdRequestCommentTypeID\r\n        && hasNotFlag(taskModel.cardTask!.flags, CardTaskFlags.Performer)\r\n        && !taskModel.cardTask!.isLockedEffective\r\n      ) {\r\n        const commentControl = taskModel.controls.get('Comment');\r\n        if (commentControl) {\r\n          commentControl.controlVisibility = Visibility.Collapsed;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { TileExtension, ITileGlobalExtensionContext, Tile, TileGroups, TileEvaluationEventArgs } from 'tessa/ui/tiles';\r\nimport { ICardModel } from 'tessa/ui/cards';\r\nimport { CardStoreMode } from 'tessa/cards';\r\nimport { UIContext } from 'tessa/ui';\r\nimport { FdProcessTilesExtension } from './fdProcessTilesExtension';\r\n\r\nexport class FdProcessTemplateTileExtension extends TileExtension {\r\n\r\n  private static enableIfProcessTemplateSaved(e: TileEvaluationEventArgs) {\r\n    const editor = e.currentTile.context.cardEditor;\r\n    let model: ICardModel;\r\n    e.setIsEnabledWithCollapsing(\r\n      e.currentTile,\r\n      !!editor\r\n      && !!(model = editor.cardModel!)\r\n      && model.cardType.id === 'd0a1425a-f233-4d75-80af-8b6d5cc529b4' // FdProcessTemplateID\r\n      && model.card.storeMode === CardStoreMode.Update\r\n    );\r\n  }\r\n\r\n  private static async visualizeProcessHandler() {\r\n    const context = UIContext.current;\r\n    const editor = context.cardEditor;\r\n\r\n    if (!editor || !editor.cardModel) {\r\n      return;\r\n    }\r\n\r\n    const model = editor.cardModel;\r\n\r\n    // визуализируем шаблон процесса\r\n    const processTemplateID = model.card.id;\r\n    FdProcessTilesExtension.VisualizeProcess(null, processTemplateID, null);\r\n  }\r\n\r\n  public initializingGlobal(context: ITileGlobalExtensionContext) {\r\n    const contextSource = context.workspace.leftPanel.contextSource;\r\n    context.workspace.leftPanel.tiles.push(\r\n      new Tile({\r\n        name: 'FdVisualizeProcessTemplateTile',\r\n        caption: 'Визуализировать',\r\n        icon: 'ta icon-thin-355',\r\n        contextSource,\r\n        group: TileGroups.Cards,\r\n        command: FdProcessTemplateTileExtension.visualizeProcessHandler,\r\n        order: 10,\r\n        evaluating: FdProcessTemplateTileExtension.enableIfProcessTemplateSaved\r\n      })\r\n    );\r\n  }\r\n}","import { ApplicationExtension, IApplicationExtensionMetadataContext } from 'tessa';\r\nimport { IStorage } from 'tessa/platform/storage';\r\nimport { TileExtension, ITileGlobalExtensionContext, ITile, Tile, TileGroups, TileEvaluationEventArgs } from 'tessa/ui/tiles';\r\nimport { tryGetFromInfo, UIContext, showNotEmpty } from 'tessa/ui';\r\nimport { ICardModel } from 'tessa/ui/cards';\r\nimport { CardRequest, CardService } from 'tessa/cards/service';\r\nimport { CardStoreMode } from 'tessa/cards';\r\nimport { createTypedField, DotNetType } from 'tessa/platform';\r\n\r\nexport class FdProcessTilesContainer {\r\n  private constructor() {}\r\n\r\n  private static _instance: FdProcessTilesContainer;\r\n  public static get instance(): FdProcessTilesContainer {\r\n    if (!FdProcessTilesContainer._instance) {\r\n      FdProcessTilesContainer._instance = new FdProcessTilesContainer();\r\n    }\r\n    return FdProcessTilesContainer._instance;\r\n  }\r\n\r\n  private _tilesStorage: IStorage[];\r\n  public get tiles(): IStorage[] {\r\n    return this._tilesStorage || [];\r\n  }\r\n\r\n  public init(tilesStorage: IStorage[]) {\r\n    this._tilesStorage = tilesStorage;\r\n  }\r\n}\r\n\r\nexport class FdProcessTilesInitalizationExtension extends ApplicationExtension {\r\n  public afterMetadataReceived(context: IApplicationExtensionMetadataContext) {\r\n    if (context.mainPartResponse) {\r\n      const tiles = tryGetFromInfo<IStorage[]>(context.mainPartResponse.info, 'FdAllPossibleProcesses', []);\r\n      FdProcessTilesContainer.instance.init(tiles);\r\n    }\r\n  }\r\n}\r\n\r\nexport class FdProcessTilesExtension extends TileExtension {\r\n  public initializingGlobal(context: ITileGlobalExtensionContext) {\r\n    let tiles = FdProcessTilesContainer.instance.tiles;\r\n    FdProcessTilesExtension.createProcessActionTiles(context, tiles);\r\n  }\r\n\r\n  private static async createProcessActionTiles(context: ITileGlobalExtensionContext, tiles: IStorage[]) {\r\n    if (Array.isArray(tiles)) {\r\n      let order: number = 100;\r\n      for (let tile of tiles) {\r\n        const processID = tile.ID;\r\n        const processName = tile.Name;\r\n        const processStartTileCaption = tile.StartTileCaption;\r\n        const processNameIcon =  tile.NameIcon;\r\n        const processStartTileIcon = tile.StartTileIcon;\r\n        let processNameIconNumber = '';\r\n        let processStartTileIconNumber = '';\r\n        if (processNameIcon && processNameIcon.toLowerCase().indexOf('thin') > -1) {\r\n          processNameIconNumber = processNameIcon.toLowerCase().split('thin')[1];\r\n        }\r\n        if (!processNameIconNumber)\r\n          processNameIconNumber = '360';\r\n        if (processStartTileIcon && processStartTileIcon.toLowerCase().indexOf('thin') > -1) {\r\n          processStartTileIconNumber = processStartTileIcon.toLowerCase().split('thin')[1];\r\n        }\r\n        if (!processStartTileIconNumber)\r\n          processStartTileIconNumber = '258';\r\n        const groupTile = new Tile({\r\n          id: processID,\r\n          name: processID,\r\n          caption: processName,\r\n          icon: 'ta icon-thin-' + processNameIconNumber,\r\n          contextSource: context.workspace.leftPanel.contextSource,\r\n          group: TileGroups.Cards,\r\n          order: order++,\r\n          command: null,\r\n          evaluating: FdProcessTilesExtension.enableIfProcessIsAvailable\r\n        });\r\n        const startProcessTile = new Tile({\r\n          name: processID + '_StartProcess',\r\n          caption: processStartTileCaption,\r\n          icon: 'ta icon-thin-' + processStartTileIconNumber,\r\n          contextSource: context.workspace.leftPanel.contextSource,\r\n          group: TileGroups.Cards,\r\n          order: 0,\r\n          command: FdProcessTilesExtension.startProcessAction,\r\n          evaluating: FdProcessTilesExtension.enableAlways\r\n        });\r\n        groupTile.tiles.push(startProcessTile);\r\n        const visualizeProcessTile = new Tile({\r\n          name: processID + '_VisualizeProcess',\r\n          caption: 'Визуализировать',\r\n          icon: 'ta icon-thin-355',\r\n          contextSource: context.workspace.leftPanel.contextSource,\r\n          group: TileGroups.Cards,\r\n          order: 1,\r\n          command: FdProcessTilesExtension.visualizeProcessAction,\r\n          evaluating: FdProcessTilesExtension.enableAlways\r\n        });\r\n        groupTile.tiles.push(visualizeProcessTile);\r\n        context.workspace.leftPanel.tiles.push(groupTile);\r\n      }\r\n    }\r\n  }\r\n\r\n  private static enableAlways(e: TileEvaluationEventArgs) {\r\n    e.setIsEnabledWithCollapsing(e.currentTile, true);\r\n  }\r\n\r\n  private static enableIfProcessIsAvailable(e: TileEvaluationEventArgs) {\r\n    let isEnabled: boolean = false;\r\n    const editor = e.currentTile.context.cardEditor;\r\n    if (editor && editor.cardModel && editor.cardModel.card) {\r\n      const card = editor.cardModel.card;\r\n      if (card.storeMode !== CardStoreMode.Insert) {\r\n        // получим доступные тайлы\r\n        const availableTiles = tryGetFromInfo<any[]>(card.info, 'FdAvailableProcesses', []);\r\n        if (availableTiles && availableTiles.some(x =>\r\n            x['ID'].$value === e.currentTile.id\r\n            && x['CanStartProcess'].$value === true)) {\r\n            isEnabled = true;\r\n        }\r\n      }\r\n    }\r\n    e.setIsEnabledWithCollapsing(e.currentTile, isEnabled);\r\n  }\r\n\r\n  private static async startProcessAction(tile: ITile) {\r\n    const context = UIContext.current;\r\n    const editor = context.cardEditor;\r\n    let model: ICardModel;\r\n\r\n    if (!editor\r\n      || !(model = editor.cardModel!)) {\r\n      return;\r\n    }\r\n    // выделяем GUID из названия вида \"GUID_StartProcess\"\r\n    const processID = tile.name.substring(0, tile.name.indexOf('_StartProcess'));\r\n\r\n    editor.openCard({\r\n      cardId: model.card.id,\r\n      cardTypeId: model.card.typeId,\r\n      cardTypeName: model.card.typeName,\r\n      info: { 'fd_create_start_process_task': createTypedField(processID, DotNetType.Guid) }\r\n    });\r\n  }\r\n\r\n  private static visualizeProcessAction(tile: ITile) {\r\n    // выделяем GUID из названия вида \"GUID_VisualizeProcess\"\r\n    const processID = tile.name.substring(0, tile.name.indexOf('_VisualizeProcess'));\r\n    // визуализируем шаблон процесса\r\n    FdProcessTilesExtension.VisualizeProcess(null, processID, null);\r\n  }\r\n\r\n  public static async VisualizeProcess(cardID: string | null, processTemplateID: string | null, processInstanceID: string | null) {\r\n    const request = new CardRequest();\r\n    request.cardId = cardID;\r\n    request.requestType = '673F3815-43D9-4E0E-AE59-709CBEFEF972';\r\n    if (processTemplateID) {\r\n      request.info = {'FdProcessTemplateID': createTypedField(processTemplateID, DotNetType.Guid)};\r\n    }\r\n    if (processInstanceID) {\r\n      request.info = {'FdProcessInstanceRowID': createTypedField(processInstanceID, DotNetType.Guid)};\r\n    }\r\n\r\n    const response = await CardService.instance.request(request);\r\n    if (!response.validationResult.isSuccessful) {\r\n      await showNotEmpty(response.validationResult.build());\r\n      return;\r\n    }\r\n    let htmlData = tryGetFromInfo<string>(response.info, 'FdHtmlData', undefined);\r\n    if (htmlData) {\r\n      let myWindow = window.open('', 'processTemplate_' + processTemplateID, '');\r\n      if (myWindow && myWindow.document) {\r\n        myWindow.document.open();\r\n        myWindow.document.write(htmlData);\r\n        myWindow.document.close();\r\n      }\r\n    }\r\n  }\r\n}","import { CardUIExtension, ICardUIExtensionContext, IBlockViewModel } from 'tessa/ui/cards';\r\nimport { TaskViewModel } from 'tessa/ui/cards/tasks';\r\nimport { DefaultFormTabWithTasksViewModel } from 'tessa/ui/cards/forms';\r\nimport { hasNotFlag, Visibility } from 'tessa/platform';\r\nimport { CardTypeFlags  } from 'tessa/cards/types';\r\nimport { CardSingletonCache } from 'tessa/cards';\r\n\r\nexport class FdUIExtension extends CardUIExtension {\r\n  private ApproveCategory = [\r\n    'e0c70afe-bcc9-47e0-9b85-95755315e933',\r\n    '621bd98a-4a93-4c57-bea6-845a9e04b046'];\r\n\r\n  private AdditionalApprovalCategory = [\r\n    '075b7969-8c3e-4415-a5bb-76c1169c7218',\r\n    '35964a26-0f74-4fad-ad21-0e978d8bb765'\r\n  ];\r\n\r\n  public initialized(context: ICardUIExtensionContext) {\r\n    const model = context.model;\r\n    if (!(model.mainForm instanceof DefaultFormTabWithTasksViewModel)\r\n    || hasNotFlag(model.cardType.flags, CardTypeFlags.AllowTasks)) {\r\n      return;\r\n    }\r\n\r\n    const formWithTasks = model.mainForm as DefaultFormTabWithTasksViewModel;\r\n\r\n    // доп. задания, которые указаны в настройках и используются как основные задания согласования/исполнения\r\n    const approveCategoryTaskTypes = this.GetApproveCategoryTaskTypes();\r\n\r\n    // скроем ненужные блоки в заданиях\r\n    for (let taskViewModel of formWithTasks.tasks) {\r\n      this.HideTaskBlocks(taskViewModel, approveCategoryTaskTypes);\r\n    }\r\n  }\r\n\r\n  private GetApproveCategoryTaskTypes = (): guid[] => {\r\n    let result: guid[] = [];\r\n    const fdSettings = CardSingletonCache.instance.cards.get('FdSettings');\r\n    if (!fdSettings) {\r\n      return result;\r\n    }\r\n\r\n    const approveCategoryTaskTypesRows = fdSettings.sections.get('FdSettings_ApproveCategoryTaskTypes')!.rows;\r\n    if (approveCategoryTaskTypesRows && approveCategoryTaskTypesRows.length > 0) {\r\n      result = approveCategoryTaskTypesRows.map(x => x.get('TaskTypeID'));\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  private HideTaskBlocks(taskViewModel: TaskViewModel, approveCategoryTaskTypes: guid[]) {\r\n    const taskModel = taskViewModel.taskModel;\r\n    // если в типе задания нет таблицы с дочерними заданиями, сразу выйдем\r\n    if (this.ApproveCategory.indexOf(taskModel.cardType.id!) < 0\r\n      && approveCategoryTaskTypes.indexOf(taskModel.cardType.id!) < 0\r\n      && this.AdditionalApprovalCategory.indexOf(taskModel.cardType.id!) < 0) {\r\n      return;\r\n    }\r\n\r\n    const fcivSection = taskModel.card.sections.tryGet('FdCommentsInfoVirtual');\r\n    let commentBlock: IBlockViewModel;\r\n    // скрываем блок с комментариями в текущем представлении\r\n    if (fcivSection && fcivSection.rows.length === 0\r\n      && !!(commentBlock = taskModel.blocks.get('CommentsBlockShort')!)\r\n    ) {\r\n      // Если секция есть, но ее поля незаполнены - значит запроса комментария не было\r\n      commentBlock.blockVisibility = Visibility.Collapsed;\r\n    }\r\n\r\n    let additionalApprovalBlock: IBlockViewModel;\r\n    const faaivSection = taskModel.card.sections.tryGet('FdAdditionalApprovalInfoVirtual');\r\n    // скрываем блок с заданиями доп согласования в текущем представлении\r\n    if (faaivSection && faaivSection.rows.length === 0\r\n      && !!(additionalApprovalBlock = taskModel.blocks.get('AdditionalApprovalBlockShort')!)\r\n    ) {\r\n      // Если секция есть, но ее поля незаполнены - значит запроса комментария не было\r\n      additionalApprovalBlock.blockVisibility = Visibility.Collapsed;\r\n    }\r\n\r\n    taskViewModel.workspaceChanged.add(e => {\r\n      const form = e.task.taskWorkspace.form;\r\n      if (!form) {\r\n        return;\r\n      }\r\n\r\n      const blocks = form.blocks;\r\n      const fcivSection = taskModel.card.sections.tryGet('FdCommentsInfoVirtual');\r\n      let innerCommentBlock: IBlockViewModel;\r\n      if (fcivSection && fcivSection.rows.length === 0\r\n        && !!(innerCommentBlock = blocks.find(x => x.name === 'CommentsBlockShort')!)\r\n      ) {\r\n        // Если секция есть, но ее поля незаполнены - значит запроса комментария не было\r\n        innerCommentBlock.blockVisibility = Visibility.Collapsed;\r\n      }\r\n\r\n      const faaivSection = taskModel.card.sections.tryGet('FdAdditionalApprovalInfoVirtual');\r\n      let innerAdditionalApprovalBlock: IBlockViewModel;\r\n      if (faaivSection && faaivSection.rows.length === 0\r\n        && !!(innerAdditionalApprovalBlock = blocks.find(x => x.name === 'AdditionalApprovalBlockShort')!)\r\n      ) {\r\n        // Если секция есть, но ее поля незаполнены - значит запроса комментария не было\r\n        innerAdditionalApprovalBlock.blockVisibility = Visibility.Collapsed;\r\n      }\r\n    });\r\n  }\r\n}","import './registrator';","import { ExtensionContainer, ExtensionStage } from 'tessa/extensions';\r\nimport { FdProcessTilesInitalizationExtension, FdProcessTilesExtension } from './fdProcessTilesExtension';\r\nimport { FdCardUIExtension } from './fdCardUIExtension';\r\nimport { FdUIExtension } from './fdUIExtension';\r\nimport { FdCommentRequestUIExtension } from './fdCommentRequestUIExtension';\r\nimport { FdProcessTemplateTileExtension } from './fdProcessTemplateTileExtension';\r\n\r\n\r\nExtensionContainer.instance.registerExtension({extension: FdProcessTilesInitalizationExtension, stage: ExtensionStage.AfterPlatform});\r\nExtensionContainer.instance.registerExtension({extension: FdProcessTilesExtension, stage: ExtensionStage.AfterPlatform});\r\nExtensionContainer.instance.registerExtension({extension: FdCardUIExtension, stage: ExtensionStage.AfterPlatform});\r\nExtensionContainer.instance.registerExtension({extension: FdUIExtension, stage: ExtensionStage.AfterPlatform});\r\nExtensionContainer.instance.registerExtension({extension: FdCommentRequestUIExtension, stage: ExtensionStage.AfterPlatform});\r\nExtensionContainer.instance.registerExtension({extension: FdProcessTemplateTileExtension, stage: ExtensionStage.AfterPlatform});","module.exports = mobx;","module.exports = tessa.tessa;","module.exports = tessa.tessa.cards;","module.exports = tessa.tessa.cards.service;","module.exports = tessa.tessa.cards.types;","module.exports = tessa.tessa.extensions;","module.exports = tessa.tessa.platform;","module.exports = tessa.tessa.ui;","module.exports = tessa.tessa.ui.cards;","module.exports = tessa.tessa.ui.cards.forms;","module.exports = tessa.tessa.ui.tiles;"],"sourceRoot":""}